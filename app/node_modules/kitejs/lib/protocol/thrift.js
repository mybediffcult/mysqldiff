"use strict";
exports.__esModule = true;
var thrift = require("thrift");
var Thrift = (function () {
    function Thrift(addr, options) {
        this.service = options['service'];
        this.timeout = options['timeout'];
        this.addr = addr;
    }
    Thrift.prototype.createConnection = function () {
        var transport, protocol;
        transport = thrift.TBufferedTransport;
        protocol = thrift.TBinaryProtocol;
        return thrift.createConnection(this.addr.getHost(), this.addr.getPort(), {
            transport: transport,
            protocol: protocol,
            'connect_timeout': this.timeout
        });
    };
    Thrift.prototype.request = function (cb) {
        if (!this.service) {
            return cb(new Error('invalid service or not given, please use .loadService(<path>) given it.'));
        }
        var con = this.createConnection();
        con.on('error', cb);
        return cb(null, thrift.createClient(this.service, con), con);
    };
    return Thrift;
}());
exports.Thrift = Thrift;
